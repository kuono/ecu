module MEMSControl where

--
-- # Functions
--
-- ## main structure
--
-- ### idea 1 ## imperative
--   start :: MEMSConfig -> IO (Either Error MEMS)
--   read  :: MEMS   -> IO (Either Error MEMS)
--   write :: MEMS   -> Command -> IO (Either Error MEMS)
--   end   :: MEMS   -> IO ()
-- ### idea 2 ## as stream
--   run :: Config -> IO (Either Error (Stream MEMS))
--   snd :: MEMS   -> Command -> IO (Either Error MEMS)
--
-- ## outlet
--
-- ##$ idea 1 ##
--   rps :: MEMS -> Maybe Int
-- ### idea 2 ## 
--   ttl :: MEMS -> CSVTitle
--   csv :: MEMS -> CSVData
--   fns :: MEMS -> [(MEMS->MEMSData a)]
--   raw :: MEMS -> [Word8]
